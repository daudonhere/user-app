import React, { useState, useEffect } from 'react';
import { useRouter } from 'next/router';
import { checkToken } from '../../utils/checkToken';
import Head from 'next/head';
import Box from '@mui/material/Box';
import CssBaseline from '@mui/material/CssBaseline';
import styles from '../../styles/page.module.scss';
import axios from 'axios';
import Toolbar from '@mui/material/Toolbar';
import Container from '@mui/material/Container';
import Grid from '@mui/material/Grid';
import Avatar from '@mui/material/Avatar';
import useMediaQuery from '@mui/material/useMediaQuery';
import { useTheme } from '@mui/material/styles';
import CircularProgress from '@mui/material/CircularProgress';
import AppbarComponent from '../../components/AppbarComponent';
import { Typography } from '@mui/material';
import Card from '@mui/material/Card';
import CardContent from '@mui/material/CardContent';
import { CardActionArea } from '@mui/material';
import CustomBackdrop from '../../components/CustomBackdropComponent';
import CustomDialog from '../../components/CustomDialogCompoent';

function Index() {
  const router = useRouter();
  const theme = useTheme();
  const [result, setResult] = useState(null);
  const [loading, setLoading] = useState(false);
  const [dialog, setDialog] = useState(false);
  const [clickDetail, setClickDetail] = useState(false);
  const [fullWidth, setFullWidth] = useState(true);
  const [maxWidth, setMaxWidth] = useState('xs');
  const fullScreen = useMediaQuery(theme.breakpoints.down('md'));
  const [progress, setProgress] = useState(0);

  const handleDetailClick = (id) => {
    setClickDetail(true);
    let percentage = 0;
    const interval = setInterval(() => {
      percentage += 4;
      setProgress(percentage);
      if (percentage >= 100) {
        clearInterval(interval);
        router.push(`/users/${id}`);
      }
    }, 100);
  };

  useEffect(() => {
    if (!checkToken()) {
      setDialog(true);
      setTimeout(() => {
        router.push('/');
      }, 2000);
    } else {
      setLoading(true);
      axios
        .get(`${process.env.NEXT_PUBLIC_API_URL}/api/users`)
        .then((response) => {
          setResult(response.data);
          setLoading(false);
        })
        .catch((error) => {
          console.error('Error saat mengambil data:', error);
          setLoading(false);
        });
    }
  }, []);

  return (
    <main>
      <Head>
        <title>Homepage</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="Favicon.ico"  sizes="16x16" />
      </Head>
      <Box sx={{ display: 'flex' }}>
        <CssBaseline />
        <AppbarComponent />
        <Box component="main">
          <Toolbar />
          <Box className={styles.boxContentStyle}>
            <Container maxWidth="xl">

              {/* This is an imported component */}
              <CustomBackdrop open={clickDetail} progress={progress} />
              <CustomDialog fullScreen={fullScreen} maxWidth={maxWidth} fullWidth={fullWidth} open={dialog} />

              {loading ? (
                <CircularProgress color="success" size={42} />
              ) : (
                <Box sx={{ flexGrow: 1 }}>
                  <Grid container spacing={8} className={styles.gridContentStyle}>
                    {result &&
                      result.data.map((data) => (
                        <Grid item xs={12} sm={4} key={data.id}>
                          <Card>
                            <CardActionArea onClick={() => handleDetailClick(data.id)}>
                              <CardContent>
                                <Grid container>
                                  <Grid item xs={3} sm={3}>
                                    <Avatar alt="User Image" src={data.avatar} sx={{ width: 80, height: 80 }} />
                                  </Grid>
                                  <Grid item xs={9} sm={9}>
                                    <Grid item xs={12}>
                                      <Typography className={styles.userNameStyle}>
                                        {data.first_name} {data.last_name}
                                      </Typography>
                                    </Grid>
                                  </Grid>
                                </Grid>
                              </CardContent>
                            </CardActionArea>
                          </Card>
                        </Grid>
                      ))}
                  </Grid>
                </Box>
              )}
            </Container>
          </Box>
        </Box>
      </Box>
    </main>
  );
}

export default Index;
