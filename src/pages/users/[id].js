import React, { useState, useEffect } from 'react';
import { useRouter } from 'next/router';
import { checkToken } from '../../utils/checkToken';
import Head from 'next/head';
import Box from '@mui/material/Box';
import CssBaseline from '@mui/material/CssBaseline';
import styles from '../../styles/page.module.scss';
import Toolbar from '@mui/material/Toolbar';
import Container from '@mui/material/Container';
import Grid from '@mui/material/Grid';
import Avatar from '@mui/material/Avatar';
import Link from '@mui/material/Link';
import useMediaQuery from '@mui/material/useMediaQuery';
import { useTheme } from '@mui/material/styles';
import CircularProgress from '@mui/material/CircularProgress';
import AppbarComponent from '../../components/AppbarComponent';
import { Typography } from '@mui/material';
import Card from '@mui/material/Card';
import CardContent from '@mui/material/CardContent';
import { CardActionArea } from '@mui/material';
import CustomDialog from '../../components/CustomDialogCompoent';



{/* This is Nextjs ISR method */}

export async function getStaticPaths() {
  const response = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/users`);
  const result = await response.json();

  const paths = result.data.map((user) => ({
    params: { id: user.id.toString() },
  }));

  return {
    paths,
    fallback: 'blocking',
  };
}

export async function getStaticProps({ params }) {
  const response = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/users/${params.id}`);
  const user = await response.json();

  return {
    props: {
      user,
    },
    revalidate: 60,
  };
}


function Id({ user }) {
  const router = useRouter();
  const theme = useTheme();
  const [loading, setLoading] = useState(false);
  const [dialog, setDialog] = useState(false);
  const [fullWidth, setFullWidth] = React.useState(true);
  const [maxWidth, setMaxWidth] = React.useState('xs');
  const fullScreen = useMediaQuery(theme.breakpoints.down('md'));

  useEffect(() => {
    if (!checkToken()) {
      setDialog(true);
      setTimeout(() => {
        router.push('/');
      }, 2000);
    } else {
      setLoading(false);
    }
  }, []);

  return (
    <main>
      <Head>
        <title>User Detail</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="Favicon.ico" width={10} height={10} />
      </Head>
      <Box sx={{ display: 'flex' }}>
        <CssBaseline />
        <AppbarComponent />
        <Box component="main">
          <Toolbar />
          <Box className={styles.boxContentStyle}>
            <Container maxWidth="x1">

              {/* This is an imported component */}
              <CustomDialog fullScreen={fullScreen} maxWidth={maxWidth} fullWidth={fullWidth} open={dialog} />

              <Box sx={{ flexGrow: 1 }}>
                {loading ? (
                  <CircularProgress color="success" size={42} />
                ) : (
                  <Grid container className={styles.gridDetailStyle}>
                    <Grid item xs={12} sm={12}>
                      <Card>
                        <CardActionArea>
                          <CardContent>
                            <Grid container>
                              <Grid item xs={3} sm={3}>
                                <Avatar alt="User Image" src={user.data.avatar} sx={{ width: 80, height: 80 }} />
                              </Grid>
                              <Grid item xs={9} sm={9}>
                                <Grid item xs={12}>
                                  <Typography className={styles.userTitleStyle}>
                                    {user.data.first_name} {user.data.last_name}
                                  </Typography>
                                  <Typography className={styles.userSubtitleStyle}>
                                    {user.data.email}
                                  </Typography>
                                  <Link underline="none" href={user.support.link} className={styles.userSubtitleStyle}>
                                      {user.support.text}
                                  </Link>
                                </Grid>
                              </Grid>
                            </Grid>
                          </CardContent>
                        </CardActionArea>
                      </Card>
                    </Grid>
                  </Grid>
                )}
              </Box>
            </Container>
          </Box>
        </Box>
      </Box>
    </main>
  );
}

export default Id;